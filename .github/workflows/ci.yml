name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Update RubyGems to the latest version
        run: gem update --system  # Update RubyGems to prevent Nokogiri version issues

      - name: Normalize platforms in Gemfile.lock
        run: bundle lock --normalize-platforms

      - name: Generate binstubs
        run: bundle binstubs railties --force

      - name: Scan for security vulnerabilities
        run: bin/brakeman --no-pager

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Update RubyGems to the latest version
        run: gem update --system  # Update RubyGems to prevent Nokogiri version issues

      - name: Normalize platforms in Gemfile.lock
        run: bundle lock --normalize-platforms

      - name: Generate binstubs
        run: bundle binstubs railties --force

      - name: Lint code for style consistency
        run: bin/rubocop -f github

  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Compose environment for testing
        run: docker-compose -f docker-compose.test.yml up -d --build

      - name: Check running services
        run: docker ps -a

      - name: Reset database (for clean CI runs)
        run: |
          docker-compose -f docker-compose.test.yml exec -T web bundle exec rails db:drop db:create db:migrate db:test:prepare

    
