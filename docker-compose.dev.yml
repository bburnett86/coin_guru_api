services:
  db:
    image: postgres:17
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-coin_guru_api_development}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      PGDATABASE: ${POSTGRES_DB:-coin_guru_api_development}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME:-postgres} -d ${DATABASE_NAME:-coin_guru_api_development}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  web:
    build:
      context: .
      target: development
    volumes:
      - .:/coin_guru_api
      - bundle:/usr/local/bundle  # Bind volume for bundle directory
    env_file:
      - .env.development  # Load environment variables from .env.development
    environment:
      DATABASE_USERNAME: ${DATABASE_USERNAME:-postgres}  # Fallback to 'postgres' if not set
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}  # Required, no fallback
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      DATABASE_NAME: ${DATABASE_NAME:-coin_guru_api_development}  # Fallback to 'coin_guru_api_development'
      RAILS_ENV: development
      BUNDLE_PATH: "/usr/local/bundle"
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3000:3000"
    networks:
      - app-network
    tmpfs:
      - /coin_guru_api/tmp

volumes:
  postgres_data: {}  # Named volume for Postgres data
  bundle: {}  # Named volume for gems

networks:
  app-network:
