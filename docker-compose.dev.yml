services:
  db:
    image: postgres:17
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_DEV}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB_DEV} -h localhost"]
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      - app-network

  web:
    build:
      context: .
      target: development
    volumes:
      - .:/coin_guru_api
      - bundle:/usr/local/bundle
    env_file:
      - .env.dev
    environment:
      RAILS_ENV: development
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_DEV}
      BUNDLE_PATH: "/usr/local/bundle"
      RUBY_GC_HEAP_OLDOBJECT_LIMIT_FACTOR: 1.5
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3000:3000"
    networks:
      - app-network
    tmpfs:
      - /coin_guru_api/tmp
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/up || exit 1"]
      interval: 15s
      timeout: 20s
      retries: 5

volumes:
  postgres_data:
  bundle:

networks:
  app-network:
    driver: bridge