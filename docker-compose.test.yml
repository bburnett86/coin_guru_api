services:
  db:
    image: postgres:17
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME:-postgres}  
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-postgres}
      POSTGRES_DB: coin_guru_api_test
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME:-postgres} -d coin_guru_api_test"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  web:
    build:
      context: .
      target: test
    restart: on-failure
    environment:
      DATABASE_USERNAME: ${DATABASE_USERNAME:-postgres}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD:-postgres}
      DATABASE_HOST: db
      DATABASE_NAME: coin_guru_api_test
      RAILS_ENV: test
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY} 
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits: {}
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
