services:
  db:
    image: postgres:17
    restart: always
    volumes:
      - postgres_data_test:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-coin_guru_api_test}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  web:
    build:
      context: .
      target: test
    restart: on-failure
    environment:
      DATABASE_URL: ${DATABASE_URL}
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
      COIN_GECKO_API_URL: ${COIN_GECKO_API_URL}
      COIN_GECKO_API_TOKEN: ${COIN_GECKO_API_TOKEN}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

volumes:
  postgres_data_test:

networks:
  app-network: