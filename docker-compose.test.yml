version: '3.8'

services:
  db:
    image: postgres:17.4
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env.test
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_TEST}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB_TEST}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    networks:
      - app-network

  web:
    build:
      context: .
      dockerfile: Dockerfile.test
      args:
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_DB_TEST: ${POSTGRES_DB_TEST}
        POSTGRES_PORT: ${POSTGRES_PORT}
        RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
    env_file:
      - .env.test
    environment:
      RAILS_ENV: test
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_TEST}
      POSTGRES_HOST: db
      POSTGRES_PORT: ${POSTGRES_PORT}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3000:3000"
    volumes:
      - .:/coin_guru_api
    networks:
      - app-network

volumes:
  postgres_data: {}

networks:
  app-network: